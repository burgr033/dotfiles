set scrolloff=10
set relativenumber
set showmode
set showcmd
set number
set visualbell
set clipboard+=unnamed
set ignorecase
set smartcase
set incsearch
set hlsearch
let mapleader = " "
set surround
set highlightedyank
set notimeout
set which-key
set nerdtree

" general
let g:WhichKeyDesc_Comment = "<leader>/ #️⃣Comment"
map <leader>/ <action>(CommentByLineComment)

" open nerdtree
let g:WhichKeyDesc_Explorer = "<leader>e 📂Explorer"
map <leader>e :NERDTreeToggle<CR>

" File navigation
let g:WhichKeyDesc_Find = "<leader>f 🔍Find"
map <leader>ff <action>(GotoFile)
map <leader>fr <action>(RecentFiles)
map <leader>fw <action>(FindInPath)
map <leader>fl <action>(RecentLocations)

let g:WhichKeyDesc_Quit = "<leader>q 🚶‍♂️Quit"
map <leader>q <action>(CloseContent)

" saving
let g:WhichKeyDesc_Save = "<leader>w 💾Save"
map <leader>w :w!<CR>

" running
let g:WhichKeyDesc_Run = "<leader>r ♟️Run"
map <leader>rr <action>(Run)

" symbols and stuff
let g:WhichKeyDesc_CodeActions = "<leader>l 🛠️️CodeActions"
map <leader>la <action>(ShowIntentionActions)
nmap <leader>ld <Action>(GotoDeclaration)
nmap <leader>ly <Action>(GotoTypeDeclaration)
nmap <leader>li <Action>(GotoImplementation)
nmap <leader>lt <Action>(GotoTest)
nmap <leader>lf <Action>(ReformatCode)

" terminal
let g:WhichKeyDesc_Terminal = "<leader>t 🖥️️️Terminal"
nmap <Leader>t :action ActivateTerminalToolWindow<CR>
" git
let g:WhichKeyDesc_Git = "<leader>g 🔀Git"
map <leader>gc <Action>(CheckinProject)
map <leader>gs <Action>(ActivateVersionControlToolWindow)
map <leader>gb <Action>(Git.Branches)

" Pane navigation
let g:WhichKeyDesc_Nav = "<leader>g 🧭Navigation"
nnoremap <C-Left> <C-w>h
nnoremap <C-Down> <C-w>j
nnoremap <C-Up> <C-w>k
nnoremap <C-Right> <C-w>l
nnoremap <C-Tab> :tabnext<CR>
nnoremap <S-Tab> :tabprevious<CR>

" Window splits
let g:WhichKeyDesc_Win = "<leader>b 🪟Windows"
map <leader>bv <Action>(SplitVertically)
map <leader>bs <Action>(SplitHorizontally)
map <leader>bu <Action>(Unsplit)
map <leader>bm <Action>(MoveEditorToOppositeTabGroup)

" Folding
let g:WhichKeyDesc_Folding = "<leader>z 🚪Folding"
map <leader>zc :action CollapseAllRegions<CR>
map <leader>zo :action ExpandAllRegions<CR>

" Easy visual indentation
vnoremap < <gv
vnoremap > >gv